{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Run the wavelength calibration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is the basic usage with sample files:\n",
    "\n",
    "Example: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. CRSA00000001.fits is a 1550-nm monochromatic flat taken in broadband/lowres mode\n",
    "2. CRSA00000002.fits through CRSA00000005.fits are broadband/lowres darks\n",
    "3. CRSA10000000.fits is a science frame in broadband/lowres mode "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we must build the calibration files.  Create a directory where they will live, make this the current working directory, and run\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "~~~ \n",
    "buildcal /path/to/CRSA00000001.fits 1550 lowres /path/to/CRSA0000000[2-5].fits\n",
    "~~~"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Follow the prompts to create (or not) oversampled PSFlet images. We recommend building them for any science analysis - not building them takes less time but is faster. This routine will create calibration files in the current working directory.  The arguments to buildcal are:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. The monochromatic flat, as a raw sequence of CHARIS reads\n",
    "2. The wavelength (in nm) of the monochromatic flat\n",
    "3. The CHARIS mode (J/H/K/lowres)\n",
    "4. Background frame(s)/dark(s) (optional)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The prompt from buildcal can look like this:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "************************************************************\n",
    "Oversample PSFlet templates to enable fitting a subpixel offset in cube\n",
    "extraction?  Cost is a factor of ~2-4 in the time to build calibrations.\n",
    "************************************************************\n",
    "     Oversample? [Y/n]: Y\n",
    "\n",
    "************************************************************\n",
    "How many threads would you like to use?  8 threads detected.\n",
    "************************************************************\n",
    "     Number of threads to use [8]: 8\n",
    "\n",
    "************************************************************\n",
    "Building calibration files, placing results in current directory:\n",
    "/Users/mrizzo/IFS/charis_data/broadband_flat\n",
    "\n",
    "Settings:\n",
    "\n",
    "Using 6 threads\n",
    "Narrow-band flatfield image: CRSA00014390.fits\n",
    "Wavelength: 1550 nm\n",
    "Observing mode: lowres\n",
    "Upsample PSFlet templates?  True\n",
    "No background will be computed.\n",
    "************************************************************\n",
    "     Continue with these settings? [Y/n]: Y\n",
    "     \n",
    "Computing ramps from sequences of raw reads\n",
    "Generating new wavelength solution\n",
    "Generating narrowband template images\n",
    "----------------------------------------> 100% complete\n",
    "Total time elapsed: 1020 seconds\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The process takes a while between a few minutes and up 30min depending on your number of cores. The parallelization will mostly take effect in the last step of the calibration. We recommend keeping a few threads free if you want to be able to operate your computer normally while buildcal is running."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Bash",
   "language": "bash",
   "name": "bash"
  },
  "language_info": {
   "codemirror_mode": "shell",
   "file_extension": ".sh",
   "mimetype": "text/x-sh",
   "name": "bash"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
